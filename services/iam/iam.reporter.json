{
	"rootMfaActive": {
		"category": "S",
		"^description": "Root user can perform sensitive operations in your account, adding an additional layer of authentication helps you to better secure your account. You have <b>NOT</b> enabled Multi-Factor Authentication (MFA) on your root user. AWS MFA is a simple best practice that adds an extra layer of protection on top of your user name and password. With MFA enabled, when a user signs in to an AWS Management Console, they will be prompted for their user name and password (the first factor—what they know), as well as for an authentication code from their AWS MFA device (the second factor—what they have). Taken together, these multiple factors provide increased security for your AWS account settings and resources.",
		"shortDesc": "Enable MFA on root user",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": -1,
		"needFullTest": 0,
		"ref": [
			"[AWS MFA]<https://aws.amazon.com/iam/features/mfa/>",
			"[IAM Best Practices]<https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html>"
		]
	},
	"mfaActive": {
		"category": "S",
		"^description": "You have not enabled Multi-Factor Authentication (MFA) on {$COUNT} IAM users. AWS MFA is a simple best practice that adds an extra layer of protection on top of your user name and password. With MFA enabled, when a user signs in to an AWS Management Console, they will be prompted for their user name and password (the first factor—what they know), as well as for an authentication code from their AWS MFA device (the second factor—what they have). Taken together, these multiple factors provide increased security for your AWS account settings and resources.",
		"shortDesc": "Enable MFA on IAM user.",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": -1,
		"needFullTest": 0,
		"ref": [
			"[AWS MFA]<https://aws.amazon.com/iam/features/mfa/>"
		]
	},
	"passwordLastChange": {
		"category": "S",
		"^description": "{$COUNT} IAM user passwords have not been changed in more than 45 days. Please rotate the passwords. Alternatively, you can set an expiration period in the password policy.",
		"shortDesc": "Rotate password",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Managing IAM Password]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_admin-change-user.html>"
		]
	},
	"accessKeyRecentlyRotated": {
		"category": "S",
		"^description": "{$COUNT} IAM user access keys have been rotated in the last 30 days. Regularly rotating access keys helps to reduce the risk of compromised credentials. If an access key is compromised without your knowledge, you limit how long the credentials can be used to access your resources.",
		"shortDesc": "Access key recently rotated",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Rotate access key]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_RotateAccessKey>"
		]
	},
	"passwordLastChange365": {
		"category": "S",
		"^description": "{$COUNT} IAM user passwords have not been changed in more than 365 days. Please rotate the passwords. Alternatively, you can set an expiration period in the password policy.",
		"shortDesc": "Rotate password",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Managing IAM Password]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_admin-change-user.html>"
		]
	},
	"passwordLastChange90": {
		"category": "S",
		"^description": "{$COUNT} IAM user passwords have not been changed in more than 90 days. Please rotate the passwords. Alternatively, you can set an expiration period in the password policy.",
		"shortDesc": "Rotate password",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Managing IAM Password]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_admin-change-user.html>"
		]
	},
	"consoleLastAccess365": {
		"category": "S",
		"^description": "{$COUNT} IAM users have not accessed the AWS console in more than 365 days. Please identify the need for these IAM users to access the console and delete them if not needed.",
		"shortDesc": "Validate IAM user console access.",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Finds unused credentials]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html>"
		]
	},
	"consoleLastAccess90": {
		"category": "S",
		"^description": "{$COUNT} IAM users have not accessed the AWS console in more than 90 days. Please identify the need for these IAM users to access the console and delete them if not needed.",
		"shortDesc": "Validate IAM user console access",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Finds unused credentials]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html>"
		]
	},
	"consoleLastAccess45": {
		"category": "S",
		"^description": "{$COUNT} IAM users have not accessed the AWS console in more than 45 days. Please identify the need for these IAM users to access the console and delete them if not needed.",
		"shortDesc": "Validate IAM user console access",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Finds unused credentials]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html>"
		]
	},
	"consoleLastAccess": {
		"category": "S",
		"^description": "{$COUNT} IAM users have never accessed the AWS console. Please identify the need for these IAM users to access the console and delete them if not needed.",
		"shortDesc": "Validate IAM user console access",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Finds unused credentials]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html>"
		]
	},
	"passwordPolicy": {
		"category": "S",
		"^description": "You have not set a custom password policy. Setting a custom password policy will allow you to have the ability to require strong password practices, such as complexity level, avoiding re-use, and enforcing multi-factor authentication (MFA). If you don't set a custom password policy, IAM user passwords must meet the default AWS password policy.",
		"shortDesc": "Set a custom password policy.",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[IAM Password Policy]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#IAMPasswordPolicy>"
		]
	},
	"passwordPolicyWeak": {
		"category": "S",
		"^description": "Your current password policy is not strong. Improving the strength of your password policy would improve the security of your account. Consider implementing best practices when setting the password policy. If you already configure as per your organization ",
		"shortDesc": "Set a stronger password policy",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Docs]<https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#configure-strong-password-policy>"
		]
	},
	"passwordPolicyReuse": {
		"category": "S",
		"^description": "Your current password policy is not strong. Improving the strength of your password policy would improve the security of your account. Consider implementing best practices when setting the password policy. If you already configure as per your organization ",
		"shortDesc": "Set a stronger password policy",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[IAM Password Policy]<https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#configure-strong-password-policy>"
		]
	},
	"passwordPolicyLength": {
		"category": "S",
		"^description": "Your current password policy is not strong. Improving the strength of your password policy would improve the security of your account. Consider implementing best practices when setting the password policy. If you already configure as per your organization ",
		"shortDesc": "Set a stronger password policy",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[IAM Password Policy]<https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#configure-strong-password-policy>"
		]
	},
	"passwordPolicyWeak": {
		"category": "S",
		"^description": "Your current password policy is not strong. Improving the strength of your password policy would improve the security of your account. Consider implementing best practices when setting the password policy. If you already configure as per your organization ",
		"shortDesc": "Set a stronger password policy",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[IAM Password Policy]<https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#configure-strong-password-policy>"
		]
	},
	"passwordPolicyStrong": {
		"category": "S",
		"^description": "You have set a strong custom password policy. A strong password policy helps to improve the security of your account by enforcing strong password practices, such as complexity level, avoiding re-use, and enforcing multi-factor authentication (MFA).",
		"shortDesc": "Strong password policy set",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[IAM Password Policy]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#IAMPasswordPolicy>"
		]
	},
	"InlinePolicy": {
		"category": "O",
		"^description": "You have set an inline policy for {$COUNT} IAM users, groups or roles. An inline policy is a policy that's embedded in an IAM identity (a user, group, or role). In most cases, we recommend that you use managed policies instead of inline policies. This is because managed policies have several additional features such as reusability, central change management, versioning and rolling back, delegating permissions management and automatic updates. Inline policies are useful if you want to maintain a strict one-to-one relationship between a policy and the identity that it's applied to. For example, you want to be sure that the permissions in a policy are not inadvertently assigned to an identity other than the one they're intended for.",
		"shortDesc": "Use managed policies",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Docs]<https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html>"
		]
	},
	"InlinePolicyFullAccessOneServ": {
		"category": "S",
		"^description": "You have set an inline policy giving {$COUNT} users, groups and/or roles full access to one service. Consider switching to managed policies instead. It is also considered best practice to limit access by following the standard security advice of granting least privilege, or granting only the permissions required to perform a task. Determine what users and roles need to do and then craft policies that allow them to perform only those tasks.",
		"shortDesc": "Limit access in policy",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Docs]<https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege>"
		]
	},
	"InlinePolicyFullAdminAccess": {
		"category": "S",
		"^description": "You have set an inline policy providing full Administrator access to {$COUNT} users, groups or roles. It is considered best practice to limit access by following the standard security advice of granting least privilege, or granting only the permissions required to perform a task. Determine what users and roles need to do and then craft policies that allow them to perform only those tasks.",
		"shortDesc": "Limit permissions.",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Docs]<https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege>"
		]
	},
	"ManagedPolicyFullAccessOneServ": {
		"category": "S",
		"^description": "You have set a managed policy giving {$COUNT} users, groups and/or roles full access to one service. It is considered best practice to limit access by following the standard security advice of granting least privilege, or granting only the permissions required to perform a task. Determine what users and roles need to do and then craft policies that allow them to perform only those tasks.",
		"shortDesc": "Limit permissions.",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Docs]<https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege>"
		]
	},
	"FullAdminAccess": {
		"category": "S",
		"^description": "You have provided full Administrator access to {$COUNT} users, groups or roles. It is considered best practice to limit access by following the standard security advice of granting least privilege, or granting only the permissions required to perform a task. Determine what users and roles need to do and then craft policies that allow them to perform only those tasks.",
		"shortDesc": "Limit permissions.",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Docs]<https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege>",
			"[Organization GuardRail Blog]<https://aws.amazon.com/blogs/security/how-to-use-service-control-policies-to-set-permission-guardrails-across-accounts-in-your-aws-organization/?ref=wellarchitected>"
		]
	},
	"userNotUsingGroup": {
		"category": "O",
		"^description": "{$COUNT} users are not within user groups. An IAM user group is a collection of IAM users. User groups let you specify permissions for multiple users, which can make it easier to manage the permissions for those users.",
		"shortDesc": "Place IAM user within User Group",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[IAM Group]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups.html>"
		]
	},
	"groupEmptyUsers": {
		"category": "O",
		"^description": "{$COUNT} User groups have no users within them. Consider deleting the groups if not being used.",
		"shortDesc": "Delete empty group.",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Docs]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups_manage_delete.html>"
		]
	},
	"unusedRole": {
		"category": "OS",
		"^description": "You have {$COUNT} unused roles in your account. Review the necessities of these roles, and delete them if no longer necessary. By removing unused roles, you can simplify monitoring and improve your security posture.",
		"shortDesc": "Review & remove inactive roles",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Blog]<https://aws.amazon.com/blogs/security/identify-unused-iam-roles-remove-confidently-last-used-timestamp/>"
		]
	},
	"roleLongSession": {
		"category": "S",
		"^description": "{$COUNT} role session duration is longer than the default duration of 60 minutes. Unless your applications and/or federated users need to complete longer running workloads in a single session, it is recommended to stick with the default session duration.",
		"shortDesc": "Review & reduce max session duration",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": -1,
		"ref": [
			"[AWS Blog]<https://aws.amazon.com/blogs/security/enable-federated-api-access-to-your-aws-resources-for-up-to-12-hours-using-iam-roles/>"
		]
	},
	"hasAlternateContact": {
		"category": "S",
		"^description": "Alternate account contacts help AWS get in contact with the appropriate personnel if needed. Configure the account’s alternate contacts to point to a group rather than an individual. For example, create separate email distribution lists for billing, operations, and security and configure these as Billing, Security, and Operations contacts in each active AWS account. This ensures that multiple people will receive AWS notifications and be able to respond, even if someone is on vacation, changes roles, or leaves the company.",
		"shortDesc": "Configure AWS account contacts",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Alternate Contact]<https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact-alternate.html>"
		]
	},
	"noUsersFound": {
		"category": "S",
		"^description": "Create individual entities and give unique security credentials and permissions to each user accessing your account. With individual entities and no shared credentials, you can audit the activity of each user.",
		"shortDesc": "Create individual identities",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Create IAM Users]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html>"
		]
	},
	"rootHasAccessKey": {
		"category": "S",
		"^description": "The root user is the most privileged user in an AWS account, with full administrative access to all resources within the account, and in some cases cannot be constrained by security policies. Disabling programmatic access to the root user, establishing appropriate controls for the root user, and avoiding routine use of the root user helps reduce the risk of inadvertent exposure of the root credentials and subsequent compromise of the cloud environment. Programmatic access to AWS APIs should never use the root user. It is best not to generate static an access key for the root user. If one already exists, you should transition any processes using that key to use temporary access keys from an AWS Identity and Access Management (IAM) role, or, if necessary, static access keys from an IAM user.",
		"shortDesc": "Remove access keys for the root user",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Delete root access key]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html#id_root-user_manage_delete-key>"
		]
	},
	"rootHasNoAccessKeys":{
		"category": "S",
		"^description": "The root user is the most privileged user in an AWS account, with full administrative access to all resources within the account, and in some cases cannot be constrained by security policies. Disabling programmatic access to the root user, establishing appropriate controls for the root user, and avoiding routine use of the root user helps reduce the risk of inadvertent exposure of the root credentials and subsequent compromise of the cloud environment. Programmatic access to AWS APIs should never use the root user. It is best not to generate static an access key for the root user. If one already exists, you should transition any processes using that key to use temporary access keys from an AWS Identity and Access Management (IAM) role, or, if necessary, static access keys from an IAM user.",
		"shortDesc": "No access keys for the root user",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Delete root access key]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html#id_root-user_manage_delete-key>"
		]
	},
	"supportPlanLowTier": {
		"category": "O",
		"^description": "It is recommended that you subscribe to the AWS Business Support tier or higher for all of your AWS production accounts. For more information, refer to Compare AWS Support Plans. If you don't have premium support, you must have an action plan to handle issues which require help from AWS Support. AWS Support provides a mix of tools and technology, people, and programs designed to proactively help you optimize performance, lower costs, and innovate faster. AWS Business Support provides additional benefits including access to AWS Trusted Advisor and AWS Personal Health Dashboard and faster response times.",
		"shortDesc": "Subscribe to the AWS Business Support tier (or higher)",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 1,
		"needFullTest": 0,
		"ref": [
			"[AWS Support Plan]<https://aws.amazon.com/premiumsupport/plans/>",
			"[Guide]<https://docs.aws.amazon.com/awssupport/latest/user/aws-support-plans.html>"
		]
	},
	"hasAccessKeyNoRotate30days": {
		"category": "S",
		"^description": "{$COUNT} user(s) impacted. When you cannot rely on temporary credentials and require long term credentials, rotate the IAM access keys regularly(maximum every 90 days). If an access key is compromised without your knowledge, you limit how long the credentials can be used to access your resources",
		"shortDesc": "Rotate credentials regularly",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 1,
		"ref": [
			"[Rotate access key]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_RotateAccessKey>"
		]
	},
	"hasAccessKeyNoRotate90days": {
		"category": "S",
		"^description": "{$COUNT} user(s) impacted. When you cannot rely on temporary credentials and require long term credentials, rotate the IAM access keys regularly(maximum every 90 days). If an access key is compromised without your knowledge, you limit how long the credentials can be used to access your resources",
		"shortDesc": "Rotate credentials regularly",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 1,
		"ref": [
			"[Rotate access key]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_RotateAccessKey>"
		]
	},
	"enableCostBudget": {
		"category": "C",
		"^description": "AWS Budgets enable monitoring of monthly costs and usage with notifications when costs are forecasted to exceed target thresholds. Forecasted cost notifications can provide an indication of unexpected activity, providing extra defense in addition to other monitoring systems, such as AWS Trusted Advisor and Amazon GuardDuty. Monitoring and understanding your AWS costs is also part of good operational hygiene.",
		"shortDesc": "Monitor your AWS spending",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Create a budget]<https://docs.aws.amazon.com/cost-management/latest/userguide/budgets-create.html#create-cost-budget>"
		]
	},
	"enableGuardDuty": {
		"category": "S",
		"^description": "Amazon GuardDuty is a threat-detection service that continuously monitors for malicious or unauthorized behavior to help protect your AWS accounts, workloads, and data. When it detects unexpected and potentially malicious activity, GuardDuty delivers detailed security findings for visibility and remediation. GuardDuty can detect threats such as cryptocurrency mining activity, access from Tor clients and relays, unexpected behavior, and compromised IAM credentials. Enable GuardDuty and respond to findings to stop potentially malicious or unauthorized behavior in your AWS environment.",
		"shortDesc": "Enable GuardDuty",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Getting started]<https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_settingup.html>",
			"[Findings]<https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-active.html>"
		]
	},
	"hasExternalIdentityProvider": {
		"category": "O",
		"^description": "This enables your users to sign in to the AWS access portal with their corporate credentials. They can then navigate to their assigned accounts, roles, and applications hosted in external IdPs. For example, you can connect an external IdP such as Okta or Azure Active Directory (AD), to IAM Identity Center. Your users can then sign in to the AWS access portal with their existing Okta or Azure credentials. In addition, you can assign access permissions centrally for your users across all the accounts and applications in your AWS organization. In addition, developers can simply sign in to the AWS Command Line Interface (AWS CLI) using their existing credentials, and benefit from automatic short-term credential generation and rotation.",
		"shortDesc": "Use External Identity Provider",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Connect to external identity]<https://docs.aws.amazon.com/singlesignon/latest/userguide/manage-your-identity-source-idp.html>"
		]
	},
	"hasSSORoles": {
		"category": "O",
		"^description": "With AWS IAM Identity Center (successor to AWS Single Sign-On), you can manage sign-in security for your workforce identities, also known as workforce users. IAM Identity Center provides one place where you can create or connect workforce users and centrally manage their access across all their AWS accounts and applications. You can use multi-account permissions to assign your workforce users access to AWS accounts. You can use application assignments to assign your users access to IAM Identity Center enabled applications, cloud applications, and customer Security Assertion Markup Language (SAML 2.0) applications.",
		"shortDesc": "Centralize Sign On to AWS",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS SSO]<https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html>"
		]
	},
	"rootConsoleLogin30days": {
		"category": "S",
		"^description": "It is critical to prevent root user access from getting into the wrong hands and to be aware whenever root user activity occurs in your AWS account. We recommend that you configure an administrative user in AWS IAM Identity Center (successor to AWS Single Sign-On) to perform daily tasks and access AWS resources. However, you can perform the tasks listed below only when you sign in as the root user of an account.<br>[1] Change your account settings, [2] Restore IAM user permissions, [3] Activate IAM access to the Billing and Cost Management console, [4] View certain tax invocies, [5] Close your account and etc. Refers to the link",
		"shortDesc": "Review activity carry out by root",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Notify on Root Activity]<https://aws.amazon.com/blogs/mt/monitor-and-notify-on-aws-account-root-user-activity/>",
			"[Root ID responsible]<https://docs.aws.amazon.com/accounts/latest/reference/root-user-tasks.html>"
		]
	},
	"rootConsoleLoginFail3x": {
		"category": "S",
		"^description": "We detected at least 3 attempts of root id login failure in the past 30 days. Please review  CloudTrail in us-east-1 region with the EventName=ConsoleLogin, dive deep into the activity information such as eventTime, sourceIPAddress and userAgent.<br>Recommend to turn on Amazon GuardDuty to proactively perform such Threat Detection",
		"shortDesc": "Review CloudTrail [ConsoleLogin] event",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[CloudTrail ConsoleLogin event]<https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-aws-console-sign-in-events.html>",
			"[GuardDuty IAM findings]<https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-iam.html>"
		]
	},
	"hasOrganization": {
		"category": "SO",
		"^description": "This AWS account is not belong to any AWS organization. Recommend to separate workloads using accounts. Establish common guardrails and isolation between environments (such as production, development, and test) and workloads through a multi-account strategy. Account-level separation is strongly recommended, as it provides a strong isolation boundary for security, billing, and access. We need to have an account structure that isolates cloud operations, unrelated workloads, and environments into separate accounts, increasing security across the cloud infrastructure.",
		"shortDesc": "Setup AWS Organization",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 1,
		"ref": [
			"[AWS Organizations conepts]<https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html>",
			"[Multiaccounts best practices]<https://aws.amazon.com/blogs/industries/best-practices-for-aws-organizations-service-control-policies-in-a-multi-account-environment/>"
		]
	},
	"userActive": {
		"category": "S",
		"^description": "{$COUNT} of user(s) has active activity in the past 30 days (either console or api).",
		"shortDesc": "Active user",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 1,
		"ref": [
			"[IAM Credential Reports]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html>",
			"[Rotate Keys]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_RotateAccessKey>"
		]
	},
	"userNoActivity90days": {
		"category": "S",
		"^description": "{$COUNT} of user(s) does not has active activity in the past 90 days (neither console or api). Please review and disable.",
		"shortDesc": "Inactive user",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 1,
		"ref": [
			"[IAM Credential Reports]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html>",
			"[Rotate Keys]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_RotateAccessKey>"
		]
	},
	"enableCURReport": {
		"category": "C",
		"^description": "Cost and Usage Reports (CUR) has not been setup in this accounts. Setup CUR for better cost analysis.",
		"shortDesc": "Setup Cost and Usage Report ",
		"criticality": "I",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 1,
		"needFullTest": 0,
		"ref": [
			"[Creating Cost and Usage Reports]<https://docs.aws.amazon.com/cur/latest/userguide/cur-create.html>"
		]
	},
	"EnableConfigService":{
		"category": "S",
		"^description": "AWS Config is not enabled. The AWS Config service performs configuration management of supported AWS resources in your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items, and any configuration changes between resources.",
		"shortDesc": "Enable AWS Config",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 1,
		"needFullTest": 0,
		"ref": [
			"[Enable AWS Config]<https://docs.aws.amazon.com/config/latest/developerguide/gs-console.html>"
		]
	},
	"PartialEnableConfigService":{
		"category": "S",
		"^description": "Not all regions has Config enabled. The AWS Config service performs configuration management of supported AWS resources in your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items, and any configuration changes between resources.",
		"shortDesc": "Enable AWS Config",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 1,
		"needFullTest": 0,
		"ref": [
			"[Enable AWS Config]<https://docs.aws.amazon.com/config/latest/developerguide/gs-console.html>"
		]
	}, 
	"SCPEnabled":{
		"category": "S",
		"^description": "Enabling service control policies (SCPs) in AWS Organizations provides central control over the maximum available permissions for the IAM users and IAM roles in your organization, helping to ensure your accounts stay within your organization's access control guidelines. SCPs are a type of organization policy that are available only when you have enabled all AWS Organizations features, not just consolidated billing, offering the ability to centrally define and enforce the maximum permissions that can be granted to IAM users and roles across your organization's accounts, which helps maintain security and compliance by making it possible to centrally manage and enforce access control policies across your entire organization.",
		"shortDesc": "Enable Service Control Policy (SCP)",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Enable Service Control Policy (SCP)]<https://docs.aws.amazon.com/organizations/latest/userguide/enable-policy-type.html>"
		]
	},
	"scpGuardrailsPresent": {
		"category": "S",
		"^description": "Service control policies (SCPs) are in place to help manage permissions across accounts in your organization.",
		"shortDesc": "SCP Guardrails Present",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Service Control Policies (SCPs)]<https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html>"
		]
	},
	"federationEnforced": {
		"category": "S",
		"^description": "Federation is enforced for all IAM users in your organization.",
		"shortDesc": "Federation Enforced",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[IAM Roles and Federation]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html>"
		]
	},
	"noLocalIamUsers": {
		"category": "S",
		"^description": "No local IAM users are present in your organization.",
		"shortDesc": "No Local IAM Users",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[IAM Users and Roles]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users.html>"
		]
	},
	"EnableSecurityHub":{
		"category": "S",
		"^description": "AWS Security Hub is not enabled. AWS Security Hub provides you with a comprehensive view of your security state in AWS and helps you check your environment against security industry standards and best practices. Enabling Security Hub allows you to centrally manage security findings from multiple AWS services and third-party solutions, making it easier to identify and remediate potential security issues across your AWS accounts.",
		"shortDesc": "Enable AWS Security Hub",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 1,
		"needFullTest": 0,
		"ref": [
			"[Enable Security Hub]<https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-settingup.html>"
		]
	},
	"ConformancePackDeployed":{
		"category": "S",
		"^description": "AWS Config Conformance Packs are not deployed. Conformance Packs are a collection of AWS Config rules and remediation actions that can be easily deployed across multiple accounts and regions. They help you manage compliance with internal policies and regulatory standards by providing a standardized way to evaluate the configuration of your AWS resources.",
		"shortDesc": "Deploy AWS Config Conformance Packs",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Config Conformance Packs]<https://docs.aws.amazon.com/config/latest/developerguide/conformance-packs.html>"
		]
	},
	"ConfigRulesRecentlyUpdated":{
		"category": "S",
		"^description": "AWS Config rules have been updated in the last 30 days. Regularly reviewing and updating your AWS Config rules ensures that they remain aligned with your organization's security policies and compliance requirements. This helps maintain an effective configuration management strategy and reduces the risk of misconfigurations in your AWS environment.",
		"shortDesc": "AWS Config rules recently updated",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Managing AWS Config Rules]<https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config-rules.html>"
		]
	},
	"RootHardwareMfaForBreakGlass": {
		"category": "S",
		"^description": "Root account has hardware MFA enabled for break glass access.",
		"shortDesc": "Root Hardware MFA for Break Glass",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Multi-Factor Authentication (MFA)]<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa.html>"
		]
	},
	"ECSTaskDefinitionsPresent": {
		"category": "O",
		"^description": "You have {$COUNT} ECS task definitions in your account. Consider reviewing and cleaning up any unused or outdated task definitions to improve resource management and reduce potential security risks.",
		"shortDesc": "Review and clean up ECS task definitions",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[ECS Task Definitions]<https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html>"
		]
	},
	"secretsRotationEnabled": {
		"category": "S",
		"^description": "{$COUNT} secrets have rotation enabled. Regularly rotating secrets helps to minimize the risk of unauthorized access due to compromised credentials. It is a best practice to enable automatic rotation for all secrets to enhance the security of your applications and services.",
		"shortDesc": "Enable automatic rotation for all secrets",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Secrets Manager Rotation]<https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html>"
		]
	},
	"secretsPeriodicallyRotated": {
		"category": "S",
		"^description": "{$COUNT} secrets have not been rotated in the last 90 days. Regularly rotating secrets helps to minimize the risk of unauthorized access due to compromised credentials. It is a best practice to rotate secrets at least every 90 days to enhance the security of your applications and services.",
		"shortDesc": "Rotate secrets at least every 90 days",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Secrets Manager Rotation]<https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html>"
		]
	},
	"secretsRecentlyAccessed": {
		"category": "S",
		"^description": "{$COUNT} secrets have not been accessed in the last 90 days. Consider reviewing and cleaning up any unused or outdated secrets to improve resource management and reduce potential security risks.",
		"shortDesc": "Review and clean up unused secrets",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Secrets Manager Best Practices]<https://docs.aws.amazon.com/secretsmanager/latest/userguide/best-practices.html>"
		]
	},
	"secretsUsingCMK": {
		"category": "S",
		"^description": "{$COUNT} secrets are using customer-managed keys (CMKs) for encryption. Using CMKs provides greater control over the encryption and decryption of your secrets, allowing you to manage key rotation, access policies, and auditing. It is a best practice to use CMKs for all secrets to enhance the security of your applications and services.",
		"shortDesc": "Use customer-managed keys (CMKs) for all secrets",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Secrets Manager Encryption]<https://docs.aws.amazon.com/secretsmanager/latest/userguide/encryption.html>"
		]
	},
	"iamUserGroupMembership": {
		"category": "S",
		"^description": "The following users do not belong to any IAM group: {$USERS}. It is a best practice to assign users to groups to simplify permissions management.",
		"shortDesc": "Users without IAM groups",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[IAM User Groups]<https://docs.aws.amazon.com/IAM/latest/UserGuide/group.html>"
		]
	},
	"emrKerberosEnabled": {
		"category": "S",
		"^description": "EMR clusters with Kerberos enabled provide an additional layer of security for your data processing jobs. It is a best practice to enable Kerberos authentication for all EMR clusters to enhance security.",
		"shortDesc": "Enable Kerberos authentication for EMR clusters",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon EMR Security Best Practices]<https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-security.html>"
		]
	},
	"ECSTaskNonRootUser": {
		"category": "S",
		"^description": "ECS tasks should run as non-root users to minimize security risks. The following tasks are running as root: {$TASKS}.",
		"shortDesc": "ECS tasks running as root",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon ECS Best Practices]<https://docs.aws.amazon.com/AmazonECS/latest/userguide/best-practices.html>"
		]
	},
	"ECSTaskContainersNonPrivileged": {
		"category": "S",
		"^description": "ECS containers should run as non-privileged users to minimize security risks. The following containers are running as privileged: {$CONTAINERS}.",
		"shortDesc": "ECS containers running as privileged",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon ECS Best Practices]<https://docs.aws.amazon.com/AmazonECS/latest/userguide/best-practices.html>"
		]
	},
	"ECSTaskContainersReadOnly": {
		"category": "S",
		"^description": "ECS containers should run as read-only to minimize security risks. The following containers are running as writable: {$CONTAINERS}.",
		"shortDesc": "ECS containers running as writable",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon ECS Best Practices]<https://docs.aws.amazon.com/AmazonECS/latest/userguide/best-practices.html>"
		]
	},
	"policiesBlockedKMS": {
		"category": "S",
		"^description": "{$COUNT} IAM policies are blocking KMS actions. It is a best practice to avoid blocking KMS actions in IAM policies to ensure proper access control and security.",
		"shortDesc": "IAM policies blocking KMS actions",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS KMS Best Practices]<https://docs.aws.amazon.com/kms/latest/developerguide/best-practices.html>"
		]
	},
	"dmsReplicationNotPublic": {
		"category": "S",
		"^description": "{$COUNT} DMS replication instances are publicly accessible. It is a best practice to restrict public access to DMS replication instances to enhance security.",
		"shortDesc": "DMS replication instances publicly accessible",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS DMS Security Best Practices]<https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.html>"
		]
	},
	"ssmDocumentsNotPublic": {
		"category": "S",
		"^description": "{$COUNT} SSM documents are publicly accessible. It is a best practice to restrict public access to SSM documents to enhance security.",
		"shortDesc": "SSM documents publicly accessible",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS SSM Security Best Practices]<https://docs.aws.amazon.com/systems-manager/latest/userguide/security-iam.html>"
		]
	},
	"EmrMasterNoPublicIp": {
		"category": "S",
		"^description": "EMR clusters with public master nodes pose a security risk. It is a best practice to ensure that EMR master nodes do not have public IP addresses.",
		"shortDesc": "EMR master nodes with public IPs",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon EMR Security Best Practices]<https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-security.html>"
		]
	},
	"SagemakerDirectInternet": {
		"category": "S",
		"^description": "{$COUNT} SageMaker notebooks have direct internet access enabled. It is a best practice to disable direct internet access for SageMaker notebooks to enhance security.",
		"shortDesc": "SageMaker notebooks with direct internet access",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon SageMaker Security Best Practices]<https://docs.aws.amazon.com/sagemaker/latest/dg/security-best-practices.html>"
		]
	},
	"ElasticsearchInVPC": {
		"category": "S",
		"^description": "{$COUNT} Elasticsearch domains are not in a VPC. It is a best practice to deploy Elasticsearch domains within a VPC to enhance security.",
		"shortDesc": "Elasticsearch domains not in a VPC",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon Elasticsearch Service Security Best Practices]<https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-security-best-practices.html>"
		]
	},
	"ElasticsearchLoggingEnabled": {
		"category": "R",
		"^description": "{$COUNT} Elasticsearch domains do not have logging enabled. It is a best practice to enable logging for Elasticsearch domains to enhance monitoring and troubleshooting capabilities.",
		"shortDesc": "Elasticsearch domains without logging",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon Elasticsearch Service Logging]<https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-logging.html>"
		]
	},
	"EBSManagedUpdates": {
		"category": "S",
		"^description": "{$COUNT} EBS volumes do not have managed updates enabled. It is a best practice to enable managed updates for EBS volumes to ensure they receive the latest security patches and updates.",
		"shortDesc": "EBS volumes without managed updates",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon EBS Best Practices]<https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-best-practices.html>"
		]
	},
	"ECSFargateLatestPlatformVersion": {
		"category": "S",
		"^description": "{$COUNT} ECS Fargate tasks are not using the latest platform version. It is a best practice to use the latest platform version for ECS Fargate tasks to ensure they receive the latest security patches and updates.",
		"shortDesc": "ECS Fargate tasks not using latest platform version",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon ECS Best Practices]<https://docs.aws.amazon.com/AmazonECS/latest/developerguide/best-practices.html>"
		]
	},
	"ECRImageScanning": {
		"category": "S",
		"^description": "{$COUNT} ECR repositories do not have image scanning enabled. It is a best practice to enable image scanning for ECR repositories to identify and mitigate potential security vulnerabilities in container images.",
		"shortDesc": "ECR repositories without image scanning",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon ECR Best Practices]<https://docs.aws.amazon.com/AmazonECR/latest/userguide/security-best-practices.html>"
		]
	},
	"ECSContainerInsights":{
		"category": "O",
		"^description": "ECS clusters without Container Insights enabled may lack visibility into performance and operational metrics. It is a best practice to enable Container Insights for ECS clusters to enhance monitoring and troubleshooting capabilities.",
		"shortDesc": "ECS clusters without Container Insights",
		"criticality": "L",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon ECS Monitoring Best Practices]<https://docs.aws.amazon.com/AmazonECS/latest/developerguide/monitoring-ecs.html>"
		]
	},
	"SagemakerEndpointKMS": {
		"category": "S",
		"^description": "{$COUNT} SageMaker endpoints are not using customer-managed keys (CMKs) for encryption. It is a best practice to use CMKs for SageMaker endpoints to enhance security.",
		"shortDesc": "SageMaker endpoints not using customer-managed keys (CMKs)",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon SageMaker Security Best Practices]<https://docs.aws.amazon.com/sagemaker/latest/dg/security-best-practices.html>"
		]
	},
	"BackupRecoveryPointEncryption": {
		"category": "S",
		"^description": "{$COUNT} backup recovery points are not encrypted. It is a best practice to encrypt backup recovery points to enhance data security.",
		"shortDesc": "Backup recovery points not encrypted",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Backup Best Practices]<https://docs.aws.amazon.com/backup/latest/devguide/best-practices.html>"
		]
	},
	"ECSTaskMemoryHardLimit": {
		"category": "S",
		"^description": "{$COUNT} EC2 tasks do not have a memory hard limit set. It is a best practice to set a memory hard limit for EC2 tasks to prevent resource exhaustion.",
		"shortDesc": "EC2 tasks without memory hard limit",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon EC2 Best Practices]<https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/best-practices.html>"
		]
	},
	"BackupPlanFrequencyAndRetention": {
		"category": "R",
		"^description": "{$COUNT} backup plans do not have an appropriate frequency and retention policy. It is a best practice to define a backup frequency and retention policy that meets your organization's recovery point objectives (RPO) and recovery time objectives (RTO).",
		"shortDesc": "Backup plans without appropriate frequency and retention policy",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Backup Best Practices]<https://docs.aws.amazon.com/backup/latest/devguide/best-practices.html>"
		]
	},
	"RecoveryPointRetention": {
		"category": "R",
		"^description": "{$COUNT} recovery points do not have an appropriate retention period. It is a best practice to define a retention period that meets your organization's data retention policies and compliance requirements.",
		"shortDesc": "Recovery points without appropriate retention period",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Backup Best Practices]<https://docs.aws.amazon.com/backup/latest/devguide/best-practices.html>"
		]
	},
	"ElasticsearchNodeToNodeEncryption": {
		"category": "R",
		"^description": "{$COUNT} Elasticsearch domains do not have node-to-node encryption enabled. It is a best practice to enable node-to-node encryption for Elasticsearch domains to enhance data security.",
		"shortDesc": "Elasticsearch domains without node-to-node encryption",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Amazon Elasticsearch Service Security Best Practices]<https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-security-best-practices.html>"
		]
	},
	"ACMCertificateExpiration": {
		"category": "R",
		"^description": "{$COUNT} ACM certificates are expiring within the next 30 days. It is a best practice to monitor certificate expiration dates and renew them in a timely manner to avoid service disruptions.",
		"shortDesc": "ACM certificates expiring soon",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Certificate Manager Best Practices]<https://docs.aws.amazon.com/acm/latest/userguide/best-practices.html>"
		]
	},
	"irTrainingCompleted": {
		"category": "S",
		"^description": "It is essential for all employees to complete incident response training to ensure they are prepared to effectively respond to security incidents. Regular training helps to reinforce best practices and keeps employees informed about the latest threats and response strategies.",
		"shortDesc": "Complete incident response training",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Incident Response Training Best Practices]<https://www.sans.org/incident-response-training/>"
		]
	},
	"incidentRunbookValidator": {
		"category": "S",
		"^description": "Having a well-defined incident response runbook is crucial for effective incident management. A runbook provides step-by-step instructions for responding to various types of incidents, ensuring a consistent and efficient response. Regularly reviewing and updating the runbook helps to keep it relevant and effective.",
		"shortDesc": "Maintain an incident response runbook",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Incident Response Runbook Best Practices]<https://www.incidentresponse.com/runbook-best-practices/>"
		]
	},
	"AccessAnalyzerFindings": {
		"category": "S",
		"^description": "There are {$COUNT} Access Analyzer findings in your account. It is a best practice to regularly review and address Access Analyzer findings to ensure that your resource policies are secure and do not inadvertently grant access to unintended principals.",
		"shortDesc": "Review and address Access Analyzer findings",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS IAM Access Analyzer]<https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html>"
		]
	},
	"HavingPolicy": {
		"category": "S",
		"^description": "The following policies are attached to users or roles: {$POLICIES}. It is a best practice to regularly review and minimize the use of overly permissive policies to enhance security.",
		"shortDesc": "Review and minimize overly permissive policies",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS IAM Best Practices]<https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html>"
		]
	},
	"CISBenchmarkEnabled": {
		"category": "S",
		"^description": "AWS Config rules based on the CIS AWS Foundations Benchmark are enabled in your account. Enabling these rules helps to ensure that your AWS resources comply with industry best practices for security and configuration management.",
		"shortDesc": "Enable CIS AWS Foundations Benchmark rules",
		"criticality": "H",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[CIS AWS Foundations Benchmark]<https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html#aws-config-cis-rules>"
		]
	},
	"VendorAssessment": {
		"category": "S",
		"^description": "It is important to conduct regular vendor assessments to evaluate the security posture of third-party vendors and ensure they meet your organization's security requirements. Regular assessments help to identify potential risks and ensure that vendors are adhering to best practices for data protection and security.",
		"shortDesc": "Conduct regular vendor assessments",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Vendor Risk Management Best Practices]<https://www.isaca.org/resources/news-and-trends/isaca-now-blog/2020/vendor-risk-management-best-practices>"
		]
	},
	"iamUsersWithPermissionsBoundary": {
		"category": "S",
		"^description": "{$COUNT} IAM users have permissions boundaries set. Permissions boundaries help to limit the maximum permissions that an IAM user can have, providing an additional layer of security and control over user permissions.",
		"shortDesc": "IAM users with permissions boundaries",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[IAM Permissions Boundaries]<https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html>"
		]
	},
	"ConformancePacksApplied": {
		"category": "S",
		"^description": "{$COUNT} AWS Config Conformance Packs are applied in your account. Conformance Packs help to ensure that your AWS resources comply with your organization's security and compliance requirements by providing a standardized way to evaluate resource configurations.",
		"shortDesc": "AWS Config Conformance Packs applied",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Config Conformance Packs]<https://docs.aws.amazon.com/config/latest/developerguide/conformance-packs.html>"
		]
	},
	"ComplianceFrameworksApplied": {
		"category": "S",
		"^description": "{$COUNT} compliance frameworks are applied in your account. Applying compliance frameworks helps to ensure that your AWS resources comply with industry standards and regulatory requirements, enhancing your organization's security and compliance posture.",
		"shortDesc": "Compliance frameworks applied",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Compliance Programs]<https://aws.amazon.com/compliance/programs/>"
		]
	},
	"ServiceControlPolicies": {
		"category": "S",
		"^description": "Service control policies (SCPs) are applied to your AWS Organizations. SCPs help to manage permissions across accounts in your organization, ensuring that accounts adhere to your organization's access control policies.",
		"shortDesc": "Service control policies applied",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[AWS Organizations Service Control Policies]<https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html>"
		]
	},
	"rpoRtoDefined": {
		"category": "R",
		"^description": "Recovery Point Objectives (RPO) and Recovery Time Objectives (RTO) are defined for your organization's critical systems and data. Defining RPO and RTO helps to ensure that your organization can effectively recover from disruptions and minimize data loss.",
		"shortDesc": "Define RPO and RTO for critical systems",
		"criticality": "M",
		"downtime": 0,
		"slowness": 0,
		"additionalCost": 0,
		"needFullTest": 0,
		"ref": [
			"[Disaster Recovery Planning Best Practices]<https://aws.amazon.com/disaster-recovery/best-practices/>"
		]
	}
}